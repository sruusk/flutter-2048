name: "Build"

on:
  push:
    branches:
      - main
    paths:
     - 'pubspec.yaml'

  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write
  deployments: write

jobs:
  build:
    name: Build & Release
    runs-on: ubuntu-latest

    steps:
      # Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Setup Java
      - name: Set Up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '17'
          cache: gradle

      # Setup Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: 'stable'
          cache: true

      # Install Dependencies
      - name: Install Dependencies
        run: flutter pub get

      # Building APK
      - name: Build APK
        run: |
          flutter build apk --release

      # Upload Artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Releases
          path: build/app/outputs/flutter-apk/app-release.apk

      # Build web
      - name: Build Web
        run: flutter build web --base-href=/flutter-2048/

      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: build/web

      # Extract Version
      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV

      # Check Tag Exists
      - uses: mukunku/tag-exists-action@v1.6.0
        id: check-tag
        with:
          tag: "v${{ env.VERSION }}"

      # Create Release
      - name: Create Release
        if: steps.check-tag.outputs.exists == 'false'
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk"
          tag: v${{ env.VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
